{"ast":null,"code":"import React,{useState,useEffect}from'react';import{format}from'date-fns';import{Trash2,Calendar,TrendingUp}from'lucide-react';import{supabase}from'../lib/supabase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const WorkoutList=_ref=>{let{refreshTrigger}=_ref;const[workouts,setWorkouts]=useState([]);const[loading,setLoading]=useState(true);const fetchWorkouts=async()=>{try{setLoading(true);// Fetch workouts with exercises and sets\nconst{data:workoutsData,error:workoutsError}=await supabase.from('workouts').select(\"\\n          *,\\n          exercises (\\n            *,\\n            sets (*)\\n          )\\n        \").order('date',{ascending:false});if(workoutsError)throw workoutsError;setWorkouts(workoutsData||[]);}catch(error){console.error('Error fetching workouts:',error);}finally{setLoading(false);}};const deleteWorkout=async workoutId=>{if(!window.confirm('Are you sure you want to delete this workout?'))return;try{var _workouts$find;// Delete sets first (due to foreign key constraints)\nconst{error:setsError}=await supabase.from('sets').delete().in('exercise_id',((_workouts$find=workouts.find(w=>w.id===workoutId))===null||_workouts$find===void 0?void 0:_workouts$find.exercises.map(e=>e.id))||[]);if(setsError)throw setsError;// Delete exercises\nconst{error:exercisesError}=await supabase.from('exercises').delete().eq('workout_id',workoutId);if(exercisesError)throw exercisesError;// Delete workout\nconst{error:workoutError}=await supabase.from('workouts').delete().eq('id',workoutId);if(workoutError)throw workoutError;fetchWorkouts();}catch(error){console.error('Error deleting workout:',error);alert('Error deleting workout. Please try again.');}};useEffect(()=>{fetchWorkouts();},[refreshTrigger]);const getDayTypeColor=dayType=>{const colors={pull:'bg-blue-100 text-blue-800',push:'bg-red-100 text-red-800',legs:'bg-green-100 text-green-800',upper:'bg-purple-100 text-purple-800',lower:'bg-orange-100 text-orange-800',off:'bg-gray-100 text-gray-800'};return colors[dayType]||'bg-gray-100 text-gray-800';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"card text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-lg\",children:\"Loading workouts...\"})});}if(workouts.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"card text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-muted\",children:\"No workouts found. Add your first workout!\"})});}return/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:workouts.map(workout=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Calendar,{size:20,className:\"text-muted\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-semibold\",children:format(new Date(workout.date),'EEEE, MMMM d, yyyy')})]}),/*#__PURE__*/_jsx(\"span\",{className:\"badge \".concat(getDayTypeColor(workout.day_type)),children:workout.day_type.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(TrendingUp,{size:20,className:\"text-success\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-lg font-bold text-success\",children:[workout.total_kg,\" kg\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteWorkout(workout.id),className:\"btn btn-danger\",style:{padding:'8px 12px'},children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]}),workout.exercises.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:workout.exercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-l-4 border-primary pl-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold mb-2\",children:exercise.name}),exercise.sets.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-3 gap-2\",children:exercise.sets.map((set,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[\"Set \",index+1,\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[set.reps,\" \\xD7 \",set.weight_kg,\" kg\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-muted\",children:[\"(\",set.reps*set.weight_kg,\" kg)\"]})]},set.id))})]},exercise.id))})]},workout.id))});};","map":{"version":3,"names":["React","useState","useEffect","format","Trash2","Calendar","TrendingUp","supabase","jsx","_jsx","jsxs","_jsxs","WorkoutList","_ref","refreshTrigger","workouts","setWorkouts","loading","setLoading","fetchWorkouts","data","workoutsData","error","workoutsError","from","select","order","ascending","console","deleteWorkout","workoutId","window","confirm","_workouts$find","setsError","delete","in","find","w","id","exercises","map","e","exercisesError","eq","workoutError","alert","getDayTypeColor","dayType","colors","pull","push","legs","upper","lower","off","className","children","length","workout","size","Date","date","concat","day_type","toUpperCase","total_kg","onClick","style","padding","exercise","name","sets","set","index","reps","weight_kg"],"sources":["C:/Users/Adria/GitHub/powerlifting/src/components/WorkoutList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { Trash2, Calendar, TrendingUp } from 'lucide-react';\r\nimport { supabase, WorkoutWithExercises } from '../lib/supabase';\r\n\r\ninterface WorkoutListProps {\r\n  refreshTrigger: number;\r\n}\r\n\r\nexport const WorkoutList: React.FC<WorkoutListProps> = ({ refreshTrigger }) => {\r\n  const [workouts, setWorkouts] = useState<WorkoutWithExercises[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchWorkouts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch workouts with exercises and sets\r\n      const { data: workoutsData, error: workoutsError } = await supabase\r\n        .from('workouts')\r\n        .select(`\r\n          *,\r\n          exercises (\r\n            *,\r\n            sets (*)\r\n          )\r\n        `)\r\n        .order('date', { ascending: false });\r\n\r\n      if (workoutsError) throw workoutsError;\r\n\r\n      setWorkouts(workoutsData || []);\r\n    } catch (error) {\r\n      console.error('Error fetching workouts:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteWorkout = async (workoutId: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this workout?')) return;\r\n\r\n    try {\r\n      // Delete sets first (due to foreign key constraints)\r\n      const { error: setsError } = await supabase\r\n        .from('sets')\r\n        .delete()\r\n        .in('exercise_id', \r\n          workouts\r\n            .find(w => w.id === workoutId)\r\n            ?.exercises.map(e => e.id) || []\r\n        );\r\n\r\n      if (setsError) throw setsError;\r\n\r\n      // Delete exercises\r\n      const { error: exercisesError } = await supabase\r\n        .from('exercises')\r\n        .delete()\r\n        .eq('workout_id', workoutId);\r\n\r\n      if (exercisesError) throw exercisesError;\r\n\r\n      // Delete workout\r\n      const { error: workoutError } = await supabase\r\n        .from('workouts')\r\n        .delete()\r\n        .eq('id', workoutId);\r\n\r\n      if (workoutError) throw workoutError;\r\n\r\n      fetchWorkouts();\r\n    } catch (error) {\r\n      console.error('Error deleting workout:', error);\r\n      alert('Error deleting workout. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWorkouts();\r\n  }, [refreshTrigger]);\r\n\r\n  const getDayTypeColor = (dayType: string) => {\r\n    const colors = {\r\n      pull: 'bg-blue-100 text-blue-800',\r\n      push: 'bg-red-100 text-red-800',\r\n      legs: 'bg-green-100 text-green-800',\r\n      upper: 'bg-purple-100 text-purple-800',\r\n      lower: 'bg-orange-100 text-orange-800',\r\n      off: 'bg-gray-100 text-gray-800'\r\n    };\r\n    return colors[dayType as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"text-lg\">Loading workouts...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (workouts.length === 0) {\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"text-lg text-muted\">No workouts found. Add your first workout!</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {workouts.map((workout) => (\r\n        <div key={workout.id} className=\"card\">\r\n          <div className=\"flex-between mb-4\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar size={20} className=\"text-muted\" />\r\n                <span className=\"text-lg font-semibold\">\r\n                  {format(new Date(workout.date), 'EEEE, MMMM d, yyyy')}\r\n                </span>\r\n              </div>\r\n              <span className={`badge ${getDayTypeColor(workout.day_type)}`}>\r\n                {workout.day_type.toUpperCase()}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <TrendingUp size={20} className=\"text-success\" />\r\n                <span className=\"text-lg font-bold text-success\">\r\n                  {workout.total_kg} kg\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={() => deleteWorkout(workout.id)}\r\n                className=\"btn btn-danger\"\r\n                style={{ padding: '8px 12px' }}\r\n              >\r\n                <Trash2 size={16} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {workout.exercises.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              {workout.exercises.map((exercise) => (\r\n                <div key={exercise.id} className=\"border-l-4 border-primary pl-4\">\r\n                  <h4 className=\"text-lg font-semibold mb-2\">{exercise.name}</h4>\r\n                  {exercise.sets.length > 0 && (\r\n                    <div className=\"grid grid-3 gap-2\">\r\n                      {exercise.sets.map((set, index) => (\r\n                        <div key={set.id} className=\"flex items-center gap-2 text-sm\">\r\n                          <span className=\"font-medium\">Set {index + 1}:</span>\r\n                          <span>{set.reps} × {set.weight_kg} kg</span>\r\n                          <span className=\"text-muted\">\r\n                            ({set.reps * set.weight_kg} kg)\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}